services:
  resource-db:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: resource_db
      POSTGRES_USER: postgres  # Default, can be omitted if unchanged
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"  # Maps container port 5432 to host port 5432
    volumes:
      - ./init-scripts/resource-db/init.sql:/docker-entrypoint-initdb.d/init.sql

  resource-service:
    build:
      context: ./resource-service
    image: resource-service:latest
    environment:
      SPRING_DATASOURCE_URL: ${RESOURCE_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${RESOURCE_DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${RESOURCE_DB_PASSWORD}
      SONG_SERVICE_URL: ${SONG_SERVICE_URL}
    ports:
      - "8080:8080"
    depends_on:
      - resource-db

  song-db:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: song_db
      POSTGRES_USER: postgres  # Default, can be omitted if unchanged
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"  # Maps container port 5432 to host port 5433 (to avoid conflict)
    volumes:
      - ./init-scripts/song-db/init.sql:/docker-entrypoint-initdb.d/init.sql

  song-service:
    build:
      context: ./song-service
    image: song-service:latest
    environment:
      SPRING_DATASOURCE_URL: ${SONG_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${SONG_DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SONG_DB_PASSWORD}
    ports:
      - "8082:8080"
    depends_on:
      - song-db
# Related settings for application.properties:
#
# For resource-service:
# spring.datasource.url=jdbc:postgresql://localhost:5432/resource-db
# spring.datasource.username=postgres
# spring.datasource.password=postgres
#
# For song-service:
# spring.datasource.url=jdbc:postgresql://localhost:5433/song-db
# spring.datasource.username=postgres
# spring.datasource.password=postgres
